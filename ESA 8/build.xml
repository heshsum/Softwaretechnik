<project name="SWT" default="dist" basedir=".">
    <description>
        Ant file to test and build the project.
    </description>

    <property name="src" location="src/main"/>
    <property name="build" location="ant/build"/>
    <property name="dist" location="ant/dist"/>
    <property name="lib" location="ant/lib"/>
    <property name="test-src" location="src/test"/>
    <property name="test-build" location="ant/test"/>

    <path id="test-classpath">
        <pathelement location="${lib}/junit-4.13.2.jar"/>
        <pathelement location="${lib}/hamcrest-2.2.jar"/>
    </path>

    <target name="clean" description="clean up">
        <echo message="Räume auf"/>
        <delete dir="${build}"/>
        <delete dir="${lib}"/>
        <delete dir="${test-build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="init" depends="clean">
        <echo message="Erstelle die notwendigen Verzeichnisse"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${test-build}"/>
        <mkdir dir="${dist}"/>
    </target>

    <target name="compile" depends="init" description="compile the source code">
        <echo message="Baue das Projekt"/>
        <javac srcdir="${src}" destdir="${build}"/>
    </target>

    <target name="get" depends="init" description="Hole Daten">
        <echo message="Lade die benötigten librarys von Maven"/>
        <!-- JUnit wird benötigt für das target "test". Da testing etwas zickig ist,
         wird nun die passende library mit "get" vom Maven repository geladen und in
         dem target "test" auf sie verwiesen.-->
        <get src="https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar" dest="${lib}" />
        <get src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar" dest="${lib}" />
    </target>

    <target name="test-compile" depends="init, get" description="compile the test source code">
        <echo message="Baue Tests"/>
        <javac srcdir="${test-src}" destdir="${test-build}" includeantruntime="false">
            <classpath>
                <path refid="test-classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="get, test-compile" description="test the project">
        <echo message="Teste das Projekt"/>
        <junit fork="yes" printsummary="on" haltonfailure="no">
            <classpath>
                <path refid="test-classpath"/>
            </classpath>
            <batchtest>
                <fileset dir="${test-build}"/>
            </batchtest>
        </junit>
    </target>

    <target name="dist" depends="compile, test" description="generate the jar file">
        <echo message="Verpacke das Projekt in eine jar"/>
        <jar jarfile="${dist}/SWT.jar" basedir="${build}"/>
    </target>
</project>